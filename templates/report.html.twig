{% extends "base.html.twig" %}
{% set pageName = "Report" %}

{% block title %}{{pageName}}{% endblock %}

{% block body %}
<article>

    <section>
        <h2 id="kmom01">Kmom01</h2>
        <p>
            <ul>
                <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                <p>Den enda erfarenhet jag har av objektorientering är kursen oopyhton och det som kom upp i kursen javascript. Sen har jag ströläst lite artiklar tidigare för att försöka förstå vad objektorientering är, men i och med kurserna så börjar jag känna att jag fattar det.</p>
                <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                <p>Rent objektorienteringsmässigt så bör man veta att en klass är en ritning för ett objekt. Ett objekt instansieras från en klass. En klass är en beskrivning av något fenomen, exempelvis en bil. Klassen samlar ihop relaterade attribut/properties/medlemsvariabler (exempelvis: registernummer) och relaterade metoder, saker man kan göra med objektet (exempelvis, byta registernummer).</p>
                <p>Specifikt för PHP så skapar man klasser med class Klassnamn {}, och deklarerar medlemsvariabler och metoder i klasskroppen. Man kan styra deras tillgänglighet utanför klassen med nyckelorden public/private. Generellt vill man ha det mesta private och låta användare av klassen komma åt grejer de behöver via ett API, som man skapar genom klassmetoder och diverse setters och getters.</p>
                <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                <p>Det känns som att den är likadan som flask / express som vi använt tidigare. Man har lite routes separat för sig, och så har man lite views separat för sig, och så skickar man in data i viewsen för att rendera ut till slutanvändaren. Känns rimligt och strukturerat! Känner inte att det är något specifikt magiskt med just PHP och symfony, utan det är ungefär samma tänk med de grejer vi tidigare använt.</p>
                <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                <p>Det är ju en ganska omfattande artikel med många "kolla här för mera information". Tror den fungerar bra som ett uppslagsverk för nu, ska man arbeta med PHP i yrkeslivet sedan så är det antagligen något man vill ha nära hjärtat. I artikeln pratar de om "design patterns" https://phptherightway.com/#design_patterns, vilket jag blev lite intresserad av efter oopython-kursen. Jag köpte boken "Design Patterns - Elements of reusable object-oriented software" som jag inte läst ännu. Men jag gillar det abstrakta med design patterns, att det är sätt att tänka på som tar sig uttryck i hur kod byggs upp. När jag får tid vill jag gärna fördjupa mig lite i det, och kanske kommer det upp redan i den här kursen!</p>
                <p>Utöver design patterns så kollade jag också in den standardfilstruktur som de föreslår https://github.com/php-pds/skeleton. Tycker om att ha någon form av koll på var jag har grejerna, och ser gärna hur andra har kommit överens om att är bäst sätt att strukturera kodbasen på.</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>Webpack har jag inte pillat så mycket med tidigare. Var kul att komma igång med kodmiljön. Jag gillar att arbeta på tills man kommer till den punkt där allt flyter. Satte upp och konfade webpack så den fungerar med SASS, och kör SASS med watch på de scss-filer jag använder och sen webpack som watchar resultatfilerna och packar om dem. Så det känns smooth.</p>
            </ul>   
        </p>
    </section>
        <section>
        <h2 id="kmom02">Kmom02</h2>
        <p>
            <ul>
                <li>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</li>
                <p>Objektorientering generellt innebär att man strukturerar och modellerar sin kod enligt de (mer eller mindre) objekt som ens program arbetar med. I objektorientering programering arbetar man med klasser, som agerar som en ritning för skapade objekt.</p>
                <p>Klasserna kan sinsemellan ha olika relationer, de förhåller sig till varandra på olika sätt. Två vanliga relationer är arv och komposition.</p>
                <p>Arv innebär konkret att en barnklass (säg "hund" med egenskaperna "äter, springer, viftar på svansen") ärver av en föräldraklass (säg "djur" med egenskaperna "äter, röra sig"). Barnklassen är både av samma sort som föräldraklassen, men också en specificering i en egen klass.</p>
                <p>Komposition innebär att en föräldraklass innehåller objekt av en barnklass, och att dessa objekt inte kan existera utanför föräldraklassen. Tänk "rum" i ett "hus".</p>
                <p>Interface är ett sätt att definiera vad en klass ska stödja för exempelvis metoder. En klass som använder sig av ett interface förbinder sig att på något sätt implementera de metoder som specificeras i interfacet.</p>
                <p>Slutligen traits, som är ett sätt för PHP att arbeta runt att multipla arv inte stöds i PHP. Istället kan man använda trait, som exempelvis kan vara en uppsättning metoder, som man kan slänga in i olika klasser. På så sätt kan flera klasser enkelt få tillgång till samma metoder, utan att de ärver av samma föräldraklass.</p>
                <p>
                <li>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</li>
                <p>Jag började med att bygga klasserna. Började först med Card och CardGraphic, där den senare ärver av den första. Byggde sedan CardHand och testade att jag kan dependecyinjecta både Card och CardGraphic i den. Byggde sist DeckOfCards. Har utvecklat alla klasser i takt med att jag byggt andra klasser och insett att jag behöver olika metoder.</p>
                <p>Är inte helt säker att jag köper att det är frågan om komposition i fallet med deck och card, tycker att man kan tänka sig att ett kort kan existera utanför ett deck.</p>
                <p>förbättringspotential: jag kan definitivt dokumentera bättre. Skulle eventuellt kunna låta DeckOfCards ärva av CardHand, eftersom DeckOfCards egentligen bara är en uppsättning kort på samma sätt som CardHand.</p>
                <li>Berätta hur det kändes att modellera ett kortspel med flödesdiagram och psuedokod. Var det något som du tror stödjer dig i din problemlösning och tankearbete för att strukturera koden kring en applikation?</li>
                <p>Jag är lite kluven faktiskt! När man börjar med ett projekt så kan det vara bra att skissa "vad man behöver för att lösa uppgiften", och tänka igenom lite vilka metoder klasserna ska ha och hur klasserna relaterar till varandra.</p>
                <p>Men sedan är det kanske först när man sitter och skriver kod som man märker av vad man faktiskt behöver ha stöd för i de olika klasserna, och det man upptäcker i själva programmerandet är saker som kan vara väldigt svåra att förutse när man ritar UML och skriver pseudokod.</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>Dependency injection klickade för mig. Alltså att man inte vill hårdkoda vilka objekt som en "kompositklass" ska innehålla, utan att man vill skicka in dem (och då kan skicka in också barnklasser). Fick det att fungera med Card och CardGraphic i CardHand-klassen.</p>


    

    

    

    

            </ul>   
        </p>
    </section>
        <section>
        <h2 id="kmom03">Kmom03</h2>
        <p>
            <ul>
                <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                <p>lalal</p>
                <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                <p>lalal</p>
                <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                <p>lalal</p>
                <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                <p>lalal</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>lala</p>
            </ul>   
        </p>
    </section>
        <section>
        <h2 id="kmom04">Kmom04</h2>
        <p>
            <ul>
                <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                <p>lalal</p>
                <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                <p>lalal</p>
                <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                <p>lalal</p>
                <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                <p>lalal</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>lala</p>
            </ul>   
        </p>
    </section>
        <section>
        <h2 id="kmom05">Kmom05</h2>
        <p>
            <ul>
                <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                <p>lalal</p>
                <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                <p>lalal</p>
                <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                <p>lalal</p>
                <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                <p>lalal</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>lala</p>
            </ul>   
        </p>
    </section>
        <section>
        <h2 id="kmom06">Kmom06</h2>
        <p>
            <ul>
                <li>Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.</li>
                <p>lalal</p>
                <li>Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?</li>
                <p>lalal</p>
                <li>Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?</li>
                <p>lalal</p>
                <li>Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om? Lyft fram några delar av artikeln som du känner mer värdefulla.</li>
                <p>lalal</p>
                <li>Vilken är din TIL för detta kmom?</li>
                <p>lala</p>
            </ul>   
        </p>
    </section>
</article>
{% endblock %}